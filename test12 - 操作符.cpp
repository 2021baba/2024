//12.操作符
// 算数操作符：+ - * / %
// 移位操作符：>>  << 
// 位操作符：&按位与，|按位或，^按位异或 
// 赋值操作符: = += -= *= /= &= ^= |= <<= >>= 
//双目操作符，如a+b,有两个操作数
//单目操作符 ，只有一个操作数 
//！逻辑反操作，真假互换，，//0表示假，非0表示真 
//-负值，+正值，&取地址，sizeof计算大小，~对一个数的二进制按位取反 
//--,++
//（类型）强制 
//关系操作符 <=,>=,==,!=,<,>
//逻辑操作符 &&逻辑与 ，||逻辑或 
//条件操作符（三目操作符） exp1 ？ exp2 ：exp3 
//逗号表达式：逗号隔开的表达式 ，逗号表达式结果为最后一个表达式的结果 
//下标引用 ，函数调用，结构成员 [] () 
#include<stdio.h>
int main()
{
	// a. 算数操作符：+ - * / %
	int a = 9/2;//int整型四舍五入 
	float b = 9/2;//整数相除，默认四舍五入 
	float c = 9.0/2.0;
	int d = 9%2; //%取模（取余）
	printf("%d\n",a);
	printf("%f\n",b);
	printf("%f\n",c);
	printf("%d\n",d);
	 
	// b. 移位操作符：>>  << 
	int e = 2;
	int f = e<<1;//<<和>>左右移的是二进值位整体移动 
	//如a - 2,0000000000000000000010移动为 0000000000000000000100变为4
	printf("%d\n",f);
	
	// c. 赋值操作符: = += -= *= /= &= ^= |= <<= >>= 
	int g = 2;
	g += 5;//和g = g + 5一样 
	
	// d. ！逻辑反操作
	int h = 1;
	printf("%d\n",!h);//非0变0，0变1 
	/*！用法
	if(a)
	{
		//如果a为真，做事 
	} 
	if(!a)
	{
		//如果a为假，做事
	}
	*/
	
	// e. sizeof是操作符，求变量括号可省略，求类型（如int）括号不可省略，通常不省略 
	//函数的括号不可省略 	
	printf("%d\n",sizeof(a));

	// f. ~按进二制位取反 ，1变成0，0变成1
	int i = 0;
	printf("%d\n",~i);
	//0的二进制位00000000000000000000000000000000变为11111111111111111111111111111111
	/*整数在内存中存储的是补码 
	一个整数二进制表示方法有三种：
	原码
	反码
	补码
	正数三个相同，负数三个不同 
	-1：10000000000000000000000000000001 原码
	反码11111111111111111111111111111110  第一个符号位不变后面变 
	补码11111111111111111111111111111111  反码二进制序列加一为补码 
	*/ 
	
	// g. --,++前置后置 
	int j = 10;
	int k = ++j;//前置++ 先++后使用 
	printf("%d\n",k); //11
	printf("%d\n",j); //11
	int l = 10;
	int m = j++;//h后置++ 先使用后++
	printf("%d\n",l); //10
	printf("%d\n",m); //11
	
	// h.（类型）强制 
	// int n =3.14;//不加（类型）可能报错精度丢失 
	int n =(int)3.14;//强制类型转换 
	printf("%d\n",n); 
	
	// i.逻辑操作符 &&逻辑与 ，||逻辑或 
	int o = 1;
	int p = 0 ;
	int q = o && p; //两个元素均为真（非零），q=1,有一个零，q=0 
	//int q = o || p; // 两个元素有一个为真（非零），q=1,两个均为零，q=0 
	printf("%d\n",q);
	
	/* j. 条件操作符（三目操作符） exp1 ？ exp2 ：exp3  (exp1,2,3为三个表达式)
	exp1成立，exp2计算,结果为exp2的结果 
	exp1成立，exp2计算,结果为exp2的结果*/
	int r = 0;
	int s = 3;
	int max = 0;
	/*	if (r>s)
			max = r;
		else
			max = s;
	*/	
	//等于以下表达式
	max = r > s ? r : s;
	printf("%d\n",max);
	
	// k. 逗号表达式：逗号隔开的表达式 ，逗号表达式结果为最后一个表达式的结果 
	int t=0;
	int u=3;
	int v=5;
	int w=(t=u-v,u=v-2,v=u*2);//逗号表达式结果为最后一个表达式的结果
	printf("%d\n",w);
	
	// l. 下标引用操作符 ，结构成员
	int arr[10]={1,2,3,4,5,6,7,8,9,10};
	printf("%d\n",arr[5]);
	
	// m.函数调用，
	printf("hehe");//()即为 函数调用操作符
	 
	return 0;
	
	
}
